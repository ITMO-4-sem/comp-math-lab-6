{"version":3,"sources":["webpack:///./ts/calculations/Core.ts","webpack:///./ts/calculations/functions/FirstFunction.ts","webpack:///./ts/calculations/functions/Function.ts","webpack:///./ts/calculations/functions/PrimaryCondition.ts","webpack:///./ts/calculations/methods/Method.ts","webpack:///./ts/calculations/methods/multistepmethods/AdamsMethod.ts","webpack:///./ts/calculations/methods/multistepmethods/MultiStepMethod.ts","webpack:///./ts/calculations/methods/onestepmethods/EulerMethod.ts","webpack:///./ts/calculations/methods/onestepmethods/ModifiedEulerMethod.ts","webpack:///./ts/calculations/methods/onestepmethods/OneStepMethod.ts","webpack:///./ts/calculations/methods/onestepmethods/RungeKuttaMethod.ts","webpack:///./ts/calculations/util/FlexibleTable.ts","webpack:///./ts/calculations/util/Range.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./ts/debug.ts"],"names":[],"mappings":"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","file":"debug.js","sourcesContent":["import { Range } from '@ts/calculations/util/Range';\r\nimport { PrimaryCondition } from '@ts/calculations/functions/PrimaryCondition';\r\nimport { Function } from '@ts/calculations/functions/Function';\r\nimport { Method } from '@ts/calculations/methods/Method';\r\nimport { FlexibleTable } from '@ts/calculations/util/FlexibleTable';\r\n\r\n\r\nexport class Core {\r\n\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public calcMethod(func: Function, range: Range, method: Method, accuracy: number, initialStepNum?: number) {\r\n\r\n        if ( initialStepNum && initialStepNum < 1 ) {\r\n            throw new Error('\"initialStepNum\" must be greater than zero.');\r\n        }\r\n\r\n        const stepNumber = initialStepNum !== undefined ? initialStepNum : 4;\r\n        const rangeLength = range.length;\r\n\r\n\r\n        let step = rangeLength / stepNumber;\r\n        let resultTableStepH = this.calcWIthFixedStep(method, func, range, step);\r\n\r\n        let maxBias;\r\n\r\n        do {\r\n            step /= 2;\r\n\r\n            const resultTableStepHalfH = this.calcWIthFixedStep(method, func, range, step);\r\n            // считаем погрешность \r\n            // присваиваем tableH значение tableHalfH\r\n\r\n            console.log('resultTableStepH = ', resultTableStepH);\r\n            console.log('resultTableStepHalfH = ', resultTableStepHalfH);\r\n\r\n\r\n            maxBias = this.getMaxBias(resultTableStepH.getYValues(), resultTableStepHalfH.getYValues(), method.getRequiredNumOfPredefinedYValues());\r\n\r\n            resultTableStepH = resultTableStepHalfH;\r\n\r\n            console.log('maxBias = ', maxBias);\r\n\r\n        } while ( ! this.isAccuracySufficient(accuracy, maxBias) );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n //todo выводить объект с 1) таблицей 2) шагом 3) максимальной погрешностью\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    private calcWIthFixedStep(method: Method, func: Function, range: Range, step: number): FlexibleTable {\r\n\r\n        const xValues = new Array<number>();\r\n        const yValues = new Array<number>();\r\n\r\n        for ( let x = range.start; x < range.end + 0.000001; x += step) {\r\n            xValues.push( x );\r\n        }\r\n\r\n        for ( let i = 0; i < method.getRequiredNumOfPredefinedYValues(); i++ ) {\r\n            yValues.push(func.func(xValues[i]));\r\n        }\r\n\r\n        return method.calc(new FlexibleTable(xValues, yValues), func);\r\n\r\n    }\r\n\r\n\r\n    private isAccuracySufficient(accuracy: number, maxBias: number): boolean {\r\n        return accuracy > maxBias;\r\n    }\r\n\r\n\r\n    private getMaxBias(yValuesH: Array<number>, yValuesHalfH: Array<number>, requiredNumOfPredefinedYValues: number): number {\r\n\r\n        if ( yValuesH.length * 2 - 1 != yValuesHalfH.length ) {\r\n            throw new Error('\"yValuesH\" length must be 2 times minus 1 shorter than' +\r\n                ' \"yValuesHalfH\" length.');\r\n        }\r\n\r\n        let maxBias = yValuesHalfH[1] - yValuesH[0];\r\n\r\n        for ( let i = 0; i < yValuesH.length; i++ ) {\r\n            maxBias = Math.max(\r\n                maxBias,\r\n                this.calcRungeBias( yValuesH[i], yValuesHalfH[ i * 2], requiredNumOfPredefinedYValues )\r\n            );\r\n        }\r\n\r\n        return maxBias;\r\n\r\n    }\r\n\r\n\r\n    private calcRungeBias(yH: number, yHalfH: number, p: number): number {\r\n        if ( p <= 0 ) {\r\n            throw new Error('\"p\" must be a positive number');\r\n        }\r\n        return (\r\n          Math.abs(yH - yHalfH)\r\n          / ( Math.pow(2, p) - 1)\r\n        );\r\n    }\r\n}","import { Function } from '@ts/calculations/functions/Function';\r\nimport { PrimaryCondition } from '@ts/calculations/functions/PrimaryCondition';\r\n\r\n\r\nexport class FirstFunction extends Function {\r\n\r\n\r\n    public getRepresentation(): string {\r\n        return 'y + (1 + x) * y^2';\r\n    }\r\n\r\n\r\n    public func(x: number): number {\r\n        return (\r\n            Math.exp(x) / ( this.constant - x * Math.exp(x))\r\n        );\r\n    }\r\n\r\n\r\n    public funcDerivative(x: number, y: number): number {\r\n        return (\r\n            y + (1 + x) * y * y\r\n        );\r\n    }\r\n\r\n    protected calcConstant(primaryCondition: PrimaryCondition): number {\r\n        const x = primaryCondition.x;\r\n        const y = primaryCondition.y;\r\n\r\n        return (\r\n            ( Math.exp(x) + y * x * Math.exp(x) ) / y\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { PrimaryCondition } from '@ts/calculations/functions/PrimaryCondition';\r\n\r\n\r\nexport abstract class Function {\r\n\r\n    protected readonly constant: number;\r\n\r\n    public abstract getRepresentation(): string;\r\n\r\n    public abstract func(x: number): number;\r\n    public abstract funcDerivative(x: number, y: number): number;\r\n    protected abstract calcConstant(primaryCondition: PrimaryCondition): number;\r\n\r\n    constructor(primaryCondition: PrimaryCondition) {\r\n        this.constant = this.calcConstant(primaryCondition);\r\n    }\r\n}","\r\nexport class PrimaryCondition {\r\n\r\n    public readonly x: number;\r\n    public readonly y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","import { FlexibleTable } from '@ts/calculations/util/FlexibleTable';\r\nimport { Function } from '@ts/calculations/functions/Function';\r\n\r\n\r\nexport abstract class Method {\r\n\r\n    public abstract getAccuracyOrder(): number;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public abstract calc(table: FlexibleTable, func: Function): FlexibleTable;\r\n\r\n\r\n    /**\r\n     *\r\n     * @return {number} number of required predefined \"y values\"\r\n     */\r\n    public abstract getRequiredNumOfPredefinedYValues(): number;\r\n}","import { Method } from '@ts/calculations/methods/Method';\r\nimport { FlexibleTable } from '@ts/calculations/util/FlexibleTable';\r\nimport { Function } from '@ts/calculations/functions/Function';\r\nimport { MultiStepMethod } from '@ts/calculations/methods/multistepmethods/MultiStepMethod';\r\n\r\n\r\nexport class AdamsMethod extends MultiStepMethod {\r\n\r\n    private xValues: Array<number> = [];\r\n    private yValues: Array<number> = [];\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    private func: Function | undefined;\r\n\r\n\r\n    getAccuracyOrder(): number {\r\n        return 4;\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public calc(table: FlexibleTable, func: Function): FlexibleTable {\r\n\r\n        if ( table.getYValues().length < 4 ) {\r\n            throw new Error('yValues row must contain at least 3 values');\r\n        }\r\n\r\n        this.xValues = table.getXValues();\r\n        this.yValues = table.getYValues();\r\n        this.func = func;\r\n\r\n        const h = this.xValues[1] - this.xValues[0];\r\n\r\n        for ( let i = this.yValues.length; i < table.size(); i++ ) {\r\n\r\n            this.yValues[i] = (\r\n                this.yValues[i - 1]\r\n                + h * this.func.funcDerivative(this.xValues[i - 1], this.yValues[i - 1])\r\n                + h * h * 1/2 * this.calcFirstFiniteDifference(i - 1)\r\n                + Math.pow(h, 3) * 5/12 * this.calcSecondFiniteDifference(i - 1)\r\n                + Math.pow(h, 4) * 3/8 * this.calcThirdFiniteDifference(i - 1)\r\n            );\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n\r\n    private calcFirstFiniteDifference(index: number): number {\r\n        const i = index;\r\n        if ( ! this.func ) {\r\n            throw new Error('this.func undefined.');\r\n        }\r\n        return (\r\n            this.func.funcDerivative(this.xValues[i], this.yValues[i])\r\n            - this.func.funcDerivative(this.xValues[i - 1], this.yValues[i - 1])\r\n        );\r\n    }\r\n\r\n    private calcSecondFiniteDifference(index: number): number {\r\n        const i = index;\r\n        if ( ! this.func ) {\r\n            throw new Error('this.func undefined.');\r\n        }\r\n        return (\r\n            this.func.funcDerivative(this.xValues[i], this.yValues[i])\r\n            - 2 * this.func.funcDerivative(this.xValues[i - 1], this.yValues[i - 1])\r\n            + this.func.funcDerivative(this.xValues[i - 2], this.yValues[i - 2])\r\n        );\r\n    }\r\n\r\n    private calcThirdFiniteDifference(index: number): number {\r\n        const i = index;\r\n        if ( ! this.func ) {\r\n            throw new Error('this.func undefined.');\r\n        }\r\n        return (\r\n            this.func.funcDerivative(this.xValues[i], this.yValues[i])\r\n            - 3 * this.func.funcDerivative(this.xValues[i - 1], this.yValues[i - 1])\r\n            + 3 * this.func.funcDerivative(this.xValues[i - 2], this.yValues[i - 2])\r\n            - this.func.funcDerivative(this.xValues[i - 3], this.yValues[i - 3])\r\n        );\r\n    }\r\n\r\n}","import { Method } from '@ts/calculations/methods/Method';\r\n\r\n\r\nexport abstract class MultiStepMethod extends Method {\r\n\r\n    getRequiredNumOfPredefinedYValues(): number {\r\n        return 4;\r\n    }\r\n}","import { Method } from '@ts/calculations/methods/Method';\r\nimport { FlexibleTable } from '@ts/calculations/util/FlexibleTable';\r\nimport { Function } from '@ts/calculations/functions/Function';\r\nimport { OneStepMethod } from '@ts/calculations/methods/onestepmethods/OneStepMethod';\r\n\r\n\r\n\r\n\r\nexport class EulerMethod extends OneStepMethod {\r\n\r\n    // private xValues: Array<number> = [];\r\n    // private yValues: Array<number> = [];\r\n    // private h: number = 1;\r\n\r\n\r\n    getAccuracyOrder(): number {\r\n        return 1;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {FlexibleTable} table with prefilled xValues and one or several counted\r\n     * yValues.\r\n     * @param func\r\n     * @return {FlexibleTable}\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public calc(table: FlexibleTable, func: Function): FlexibleTable {\r\n\r\n        const  xValues = table.getXValues();\r\n        const yValues = table.getYValues();\r\n\r\n        const h = xValues[1] - xValues[0];\r\n\r\n\r\n        for ( let i = yValues.length; i < table.size(); i++ ) {\r\n\r\n            yValues[i] = yValues[i - 1] + h * func.funcDerivative(xValues[i - 1], yValues[i - 1]);\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n\r\n}","import { Method } from '@ts/calculations/methods/Method';\r\nimport { FlexibleTable } from '@ts/calculations/util/FlexibleTable';\r\nimport { Function } from '@ts/calculations/functions/Function';\r\nimport { OneStepMethod } from '@ts/calculations/methods/onestepmethods/OneStepMethod';\r\n\r\n\r\nexport class ModifiedEulerMethod extends OneStepMethod {\r\n    getAccuracyOrder(): number {\r\n        return 2;\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public calc(table: FlexibleTable, func: Function): FlexibleTable {\r\n\r\n        const  xValues = table.getXValues();\r\n        const yValues = table.getYValues();\r\n\r\n        const h = xValues[1] - xValues[0];\r\n\r\n        for ( let i = yValues.length; i < table.size(); i++ ) {\r\n\r\n            yValues[i] = (\r\n                yValues[i - 1]\r\n                + h/2\r\n                * (\r\n                    func.funcDerivative(xValues[i - 1], yValues[i - 1])\r\n                    + func.funcDerivative(\r\n                        xValues[i],\r\n                      yValues[i - 1] + h * func.funcDerivative(xValues[i - 1], yValues[i - 1])\r\n                    )\r\n                )\r\n            );\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n}","import { Method } from '@ts/calculations/methods/Method';\r\n\r\n\r\nexport abstract class OneStepMethod extends Method {\r\n\r\n    getRequiredNumOfPredefinedYValues(): number {\r\n        return 1;\r\n    }\r\n}","import { Method } from '@ts/calculations/methods/Method';\r\nimport { FlexibleTable } from '@ts/calculations/util/FlexibleTable';\r\nimport { Function } from '@ts/calculations/functions/Function';\r\nimport { OneStepMethod } from '@ts/calculations/methods/onestepmethods/OneStepMethod';\r\n\r\n\r\nexport class RungeKuttaMethod extends OneStepMethod {\r\n    getAccuracyOrder(): number {\r\n        return 4;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public calc(table: FlexibleTable, func: Function): FlexibleTable {\r\n\r\n        const  xValues = table.getXValues();\r\n        const yValues = table.getYValues();\r\n\r\n        const h = xValues[1] - xValues[0];\r\n\r\n\r\n        for ( let i = yValues.length; i < table.size(); i++ ) {\r\n\r\n            const xiPrev = xValues[i - 1];\r\n            const yiPrev = yValues[i - 1];\r\n\r\n            const k1 = h * func.funcDerivative(xiPrev, yiPrev);\r\n            const k2 = h * func.funcDerivative( xiPrev + h/2, yiPrev + k1/2);\r\n            const k3 = h * func.funcDerivative( xiPrev + h/2, yiPrev + k2/2);\r\n            const k4 = h * func.funcDerivative(xiPrev + h, yiPrev + k3);\r\n\r\n            yValues[i] = yiPrev + 1/6 * (k1 + 2 * k2 + 2 * k3 + k4);\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n}","import { Table } from '@ts/calculations/util/Table';\r\nimport { Clonable } from '@ts/calculations/util/Clonable';\r\n\r\n\r\nexport class FlexibleTable implements Clonable<FlexibleTable> {\r\n\r\n    private readonly xValues: Array<number>;\r\n    private readonly yValues: Array<number>;\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {Array<number>} xValues\r\n     * @param {Array<number>} yValues\r\n     * @throws Error if xValues.length != yValues.length\r\n     */\r\n    constructor(xValues: Array<number>, yValues: Array<number>) {\r\n\r\n        if ( xValues.length < yValues.length) {\r\n            throw new Error('xValues row length must be not less then the yValues rows' +\r\n                ' one');\r\n        }\r\n\r\n        if ( yValues.length === 0 ) {\r\n            throw new Error('yValues row need to contain least 1 element.');\r\n        }\r\n\r\n        this.xValues = xValues;\r\n        this.yValues = yValues;\r\n    }\r\n\r\n\r\n    clone(): FlexibleTable {\r\n        return new FlexibleTable(\r\n            Array.from(this.xValues),\r\n            Array.from(this.yValues)\r\n        );\r\n    }\r\n\r\n\r\n    public size(): number {\r\n        return this.xValues.length;\r\n    }\r\n\r\n\r\n    public getXValues(): Array<number> {\r\n        return this.xValues;\r\n    }\r\n\r\n\r\n    public getYValues(): Array<number> {\r\n        return this.yValues;\r\n    }\r\n\r\n}","\r\nexport class Range {\r\n\r\n    public readonly start: number;\r\n    public readonly end: number;\r\n    public readonly length: number;\r\n\r\n\r\n    constructor(start: number, end: number) {\r\n\r\n        if ( start > end ) {\r\n            throw new Error('\"start\" must not be greater then the \"end\".');\r\n        }\r\n\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        this.length = end - start;\r\n    }\r\n\r\n\r\n\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { FlexibleTable } from '@ts/calculations/util/FlexibleTable';\r\nimport { EulerMethod } from '@ts/calculations/methods/onestepmethods/EulerMethod';\r\nimport { FirstFunction } from '@ts/calculations/functions/FirstFunction';\r\nimport { ModifiedEulerMethod } from '@ts/calculations/methods/onestepmethods/ModifiedEulerMethod';\r\nimport { RungeKuttaMethod } from '@ts/calculations/methods/onestepmethods/RungeKuttaMethod';\r\nimport { AdamsMethod } from '@ts/calculations/methods/multistepmethods/AdamsMethod';\r\nimport { PrimaryCondition } from '@ts/calculations/functions/PrimaryCondition';\r\nimport { Core } from '@ts/calculations/Core';\r\nimport { Range } from '@ts/calculations/util/Range';\r\n\r\n\r\nconst firstFunction = new FirstFunction(new PrimaryCondition(1, -1));\r\n\r\nconst range1: Range = new Range(1, 1.5);\r\n\r\nconst flexibleTable1 = new FlexibleTable(\r\n    [1, 1.1, 1.2, 1.3, 1.4, 1.5],\r\n    [-1]\r\n);\r\nconst flexibleTable1Prefilled = new FlexibleTable(\r\n    [1, 1.1, 1.2, 1.3, 1.4, 1.5],\r\n    [-1, -0.909091, -0.833333, -0.769231]\r\n);\r\n\r\nconst h = 0.1;\r\n\r\n\r\nconst eulerMethod = new EulerMethod();\r\nconst eulerMethodResult = eulerMethod.calc(flexibleTable1.clone(), firstFunction);\r\nconsole.log('eulerMethodResult = ', eulerMethodResult);\r\n\r\nconst modifiedEulerMethod = new ModifiedEulerMethod();\r\nconst modifiedEulerMethodResult = modifiedEulerMethod.calc(flexibleTable1.clone(), firstFunction);\r\nconsole.log('modifiedEulerMethodResult = ', modifiedEulerMethodResult);\r\n\r\nconst rungeKuttaMethod = new RungeKuttaMethod();\r\nconst rungeKuttaMethodResult = rungeKuttaMethod.calc(flexibleTable1.clone(), firstFunction);\r\nconsole.log('rungeKuttaMethodResult = ', rungeKuttaMethodResult);\r\n\r\nconst adamsMethod = new AdamsMethod();\r\nconst adamsMethodResult = adamsMethod.calc(flexibleTable1Prefilled.clone(), firstFunction);\r\nconsole.log('adamsMethodResult = ', adamsMethodResult);\r\n\r\n\r\nfor ( let i = 0; i < flexibleTable1.size(); i++ ) {\r\n    const x = flexibleTable1.getXValues()[i];\r\n    console.log('x = ',x, ' F(x) = ', firstFunction.func(x));\r\n}\r\n\r\n\r\nconst core = new Core();\r\n\r\nconst accuracy = 0.001;\r\n\r\nconsole.log( core.calcMethod(firstFunction, range1, eulerMethod, accuracy, 5) );"],"sourceRoot":""}