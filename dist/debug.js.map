{"version":3,"sources":["webpack:///./ts/calculations/FlexibleTable.ts","webpack:///./ts/calculations/functions/FirstFunction.ts","webpack:///./ts/calculations/functions/Function.ts","webpack:///./ts/calculations/methods/Method.ts","webpack:///./ts/calculations/methods/onestepmethods/EulerMethod.ts","webpack:///./ts/calculations/methods/onestepmethods/ModifiedEulerMethod.ts","webpack:///./ts/calculations/methods/onestepmethods/RungeKuttaMethod.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./ts/debug.ts"],"names":[],"mappings":"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","file":"debug.js","sourcesContent":["import { Table } from '@ts/calculations/Table';\r\nimport { Clonable } from '@ts/calculations/util/Clonable';\r\n\r\n\r\nexport class FlexibleTable implements Clonable<FlexibleTable> {\r\n\r\n    private readonly xValues: Array<number>;\r\n    private readonly yValues: Array<number>;\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {Array<number>} xValues\r\n     * @param {Array<number>} yValues\r\n     * @throws Error if xValues.length != yValues.length\r\n     */\r\n    constructor(xValues: Array<number>, yValues: Array<number>) {\r\n\r\n        if ( xValues.length < yValues.length) {\r\n            throw new Error('xValues row length must be not less then the yValues rows' +\r\n                ' one');\r\n        }\r\n\r\n        if ( yValues.length === 0 ) {\r\n            throw new Error('yValues row need to contain least 1 element.');\r\n        }\r\n\r\n        this.xValues = xValues;\r\n        this.yValues = yValues;\r\n    }\r\n\r\n\r\n    clone(): FlexibleTable {\r\n        return new FlexibleTable(\r\n            Array.from(this.xValues),\r\n            Array.from(this.yValues)\r\n        );\r\n    }\r\n\r\n\r\n    public size(): number {\r\n        return this.xValues.length;\r\n    }\r\n\r\n\r\n    public getXValues(): Array<number> {\r\n        return this.xValues;\r\n    }\r\n\r\n\r\n    public getYValues(): Array<number> {\r\n        return this.yValues;\r\n    }\r\n\r\n}","import { Function } from '@ts/calculations/functions/Function';\r\n\r\n\r\nexport class FirstFunction extends Function {\r\n\r\n\r\n    getRepresentation(): string {\r\n        return 'y + (1 + x) * y^2';\r\n    }\r\n\r\n\r\n    func(x: number): number {\r\n        return 0;\r\n    }\r\n\r\n\r\n    funcDerivative(x: number, y: number): number {\r\n        return (\r\n            y + (1 + x) * y * y\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n}","\r\nexport abstract class Function {\r\n\r\n    public abstract getRepresentation(): string;\r\n\r\n    public abstract func(x: number): number;\r\n    public abstract funcDerivative(x: number, y: number): number;\r\n\r\n}","\r\nexport abstract class Method {\r\n\r\n    public abstract getAccuracyOrder(): number;\r\n}","import { Method } from '@ts/calculations/methods/Method';\r\nimport { FlexibleTable } from '@ts/calculations/FlexibleTable';\r\nimport { Function } from '@ts/calculations/functions/Function';\r\n\r\n\r\nexport class EulerMethod extends Method {\r\n\r\n    // private xValues: Array<number> = [];\r\n    // private yValues: Array<number> = [];\r\n    // private h: number = 1;\r\n\r\n\r\n    getAccuracyOrder(): number {\r\n        return 1;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {FlexibleTable} table with prefilled xValues and one or several counted\r\n     * yValues.\r\n     * @param func\r\n     * @param {number} step\r\n     * @return {FlexibleTable}\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public calc(table: FlexibleTable, func: Function, step: number): FlexibleTable {\r\n        const h = step;\r\n\r\n        const  xValues = table.getXValues();\r\n        const yValues = table.getYValues();\r\n\r\n        for ( let i = yValues.length; i < table.size(); i++ ) {\r\n\r\n            yValues[i] = yValues[i - 1] + h * func.funcDerivative(xValues[i - 1], yValues[i - 1]);\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n\r\n}","import { Method } from '@ts/calculations/methods/Method';\r\nimport { FlexibleTable } from '@ts/calculations/FlexibleTable';\r\nimport { Function } from '@ts/calculations/functions/Function';\r\n\r\n\r\nexport class ModifiedEulerMethod extends Method {\r\n    getAccuracyOrder(): number {\r\n        return 2;\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public calc(table: FlexibleTable, func: Function, step: number): FlexibleTable {\r\n        const h = step;\r\n\r\n        const  xValues = table.getXValues();\r\n        const yValues = table.getYValues();\r\n\r\n        for ( let i = yValues.length; i < table.size(); i++ ) {\r\n\r\n            yValues[i] = (\r\n                yValues[i - 1]\r\n                + h/2\r\n                * (\r\n                    func.funcDerivative(xValues[i - 1], yValues[i - 1])\r\n                    + func.funcDerivative(\r\n                        xValues[i],\r\n                      yValues[i - 1] + h * func.funcDerivative(xValues[i - 1], yValues[i - 1])\r\n                    )\r\n                )\r\n            );\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n}","import { Method } from '@ts/calculations/methods/Method';\r\nimport { FlexibleTable } from '@ts/calculations/FlexibleTable';\r\nimport { Function } from '@ts/calculations/functions/Function';\r\n\r\n\r\nexport class RungeKuttaMethod extends Method {\r\n    getAccuracyOrder(): number {\r\n        return 4;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public calc(table: FlexibleTable, func: Function, step: number): FlexibleTable {\r\n        const h = step;\r\n\r\n        const  xValues = table.getXValues();\r\n        const yValues = table.getYValues();\r\n\r\n        for ( let i = yValues.length; i < table.size(); i++ ) {\r\n\r\n            const xiPrev = xValues[i - 1];\r\n            const yiPrev = yValues[i - 1];\r\n\r\n            const k1 = h * func.funcDerivative(xiPrev, yiPrev);\r\n            const k2 = h * func.funcDerivative( xiPrev + h/2, yiPrev + k1/2);\r\n            const k3 = h * func.funcDerivative( xiPrev + h/2, yiPrev + k2/2);\r\n            const k4 = h * func.funcDerivative(xiPrev + h, yiPrev + k3);\r\n\r\n            yValues[i] = yiPrev + 1/6 * (k1 + 2 * k2 + 2 * k3 + k4);\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { FlexibleTable } from '@ts/calculations/FlexibleTable';\r\nimport { EulerMethod } from '@ts/calculations/methods/onestepmethods/EulerMethod';\r\nimport { FirstFunction } from '@ts/calculations/functions/FirstFunction';\r\nimport { ModifiedEulerMethod } from '@ts/calculations/methods/onestepmethods/ModifiedEulerMethod';\r\nimport { RungeKuttaMethod } from '@ts/calculations/methods/onestepmethods/RungeKuttaMethod';\r\n\r\n\r\nconst firstFunction = new FirstFunction();\r\n\r\n\r\nconst flexibleTable = new FlexibleTable(\r\n    [1, 1.1, 1.2, 1.3, 1.4, 1.5],\r\n    [-1]\r\n);\r\n\r\nconst h = 0.1;\r\n\r\n\r\nconst eulerMethod = new EulerMethod();\r\nconst eulerMethodResult = eulerMethod.calc(flexibleTable.clone(), firstFunction, h);\r\nconsole.log('eulerMethodResult = ', eulerMethodResult);\r\n\r\nconst modifiedEulerMethod = new ModifiedEulerMethod();\r\nconst modifiedEulerMethodResult = modifiedEulerMethod.calc(flexibleTable.clone(), firstFunction, h);\r\nconsole.log('modifiedEulerMethodResult = ', modifiedEulerMethodResult);\r\n\r\nconst rungeKuttaMethod = new RungeKuttaMethod();\r\nconst rungeKuttaMethodResult = rungeKuttaMethod.calc(flexibleTable.clone(), firstFunction, h);\r\nconsole.log('rungeKuttaMethodResult = ', rungeKuttaMethodResult);\r\n\r\n"],"sourceRoot":""}